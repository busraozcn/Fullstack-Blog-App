{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ModalPostsComponent from \"./ModalPostsComponent.vue\";\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\nimport axios from \"axios\";\nexport default {\n  name: \"PostsPage\",\n  components: {\n    SidebarComponent,\n    ModalPostsComponent\n  },\n  data() {\n    return {\n      posts: [],\n      showModal: false,\n      selectedPost: {},\n      selectedUser: null\n    };\n  },\n  created() {\n    const userId = this.$route.query.userId;\n    if (userId) {\n      axios.get(`https://jsonplaceholder.typicode.com/users/${userId}`).then(response => {\n        this.selectedUser = response.data;\n      }).catch(error => {\n        console.error(\"Error fetching user:\", error);\n      });\n      axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`).then(response => {\n        this.posts = response.data;\n      }).catch(error => {\n        console.error(\"Error fetching posts:\", error);\n      });\n    }\n  },\n  methods: {\n    openPost(post) {\n      this.selectedPost = post;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    goBack() {\n      this.$router.push(\"/\");\n    }\n  }\n};","map":{"version":3,"names":["ModalPostsComponent","SidebarComponent","axios","name","components","data","posts","showModal","selectedPost","selectedUser","created","userId","$route","query","get","then","response","catch","error","console","methods","openPost","post","closeModal","goBack","$router","push"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\PostsPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"posts-page\">\r\n    <SidebarComponent :user=\"selectedUser\" />\r\n    <button @click=\"goBack\">Geri</button>\r\n    <div class=\"content\">\r\n      <h1>Posts Page</h1>\r\n      <ul>\r\n        <li v-for=\"post in posts\" :key=\"post.id\">\r\n          <a href=\"#\" @click.prevent=\"openPost(post)\">{{ post.title }}</a>\r\n        </li>\r\n      </ul>\r\n      <ModalPostsComponent :visible=\"showModal\" @close=\"closeModal\">\r\n        <template #header>\r\n          <h2>{{ selectedPost.title }}</h2>\r\n        </template>\r\n        <template #body>\r\n          <p>{{ selectedPost.body }}</p>\r\n        </template>\r\n        <template #footer>\r\n          <button @click=\"closeModal\">Close</button>\r\n        </template>\r\n      </ModalPostsComponent>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ModalPostsComponent from \"./ModalPostsComponent.vue\";\r\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PostsPage\",\r\n  components: {\r\n    SidebarComponent,\r\n    ModalPostsComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      showModal: false,\r\n      selectedPost: {},\r\n      selectedUser: null,\r\n    };\r\n  },\r\n  created() {\r\n    const userId = this.$route.query.userId;\r\n    if (userId) {\r\n      axios\r\n        .get(`https://jsonplaceholder.typicode.com/users/${userId}`)\r\n        .then((response) => {\r\n          this.selectedUser = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user:\", error);\r\n        });\r\n\r\n      axios\r\n        .get(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`)\r\n        .then((response) => {\r\n          this.posts = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching posts:\", error);\r\n        });\r\n    }\r\n  },\r\n  methods: {\r\n    openPost(post) {\r\n      this.selectedPost = post;\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n    goBack() {\r\n      this.$router.push(\"/\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.posts-page {\r\n  display: flex;\r\n}\r\n\r\n.content {\r\n  margin-left: 260px;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AA2BA,OAAOA,mBAAkB,MAAO,2BAA2B;AAC3D,OAAOC,gBAAe,MAAO,gCAAgC;AAC7D,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVH,gBAAgB;IAChBD;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE,CAAC,CAAC;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,MAAM;IACvC,IAAIA,MAAM,EAAE;MACVT,KAAI,CACDY,GAAG,CAAC,8CAA8CH,MAAM,EAAE,EAC1DI,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACP,YAAW,GAAIO,QAAQ,CAACX,IAAI;MACnC,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEJhB,KAAI,CACDY,GAAG,CAAC,qDAAqDH,MAAM,EAAE,EACjEI,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACV,KAAI,GAAIU,QAAQ,CAACX,IAAI;MAC5B,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,QAAQA,CAACC,IAAI,EAAE;MACb,IAAI,CAACd,YAAW,GAAIc,IAAI;MACxB,IAAI,CAACf,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDgB,UAAUA,CAAA,EAAG;MACX,IAAI,CAAChB,SAAQ,GAAI,KAAK;IACxB,CAAC;IACDiB,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}