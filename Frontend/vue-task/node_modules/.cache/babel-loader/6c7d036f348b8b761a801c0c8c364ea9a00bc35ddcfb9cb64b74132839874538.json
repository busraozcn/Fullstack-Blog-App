{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '@/assets/tabler_square-rounded-x.png';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-mask\"\n};\nconst _hoisted_2 = {\n  class: \"modal-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"modal-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Close Icon\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = {\n  class: \"modal-header\"\n};\nconst _hoisted_7 = {\n  class: \"modal-body\"\n};\nconst _hoisted_8 = {\n  class: \"post-detail\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"separator\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"comments-section\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Comments:\", -1 /* HOISTED */);\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"comment-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"modal-posts\"\n  }, {\n    default: _withCtx(() => [$props.visible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n      class: \"close\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.close && $options.close(...args))\n    }, [..._hoisted_5]), _createElementVNode(\"div\", _hoisted_6, [_renderSlot(_ctx.$slots, \"header\", {}, () => [_createElementVNode(\"h1\", null, _toDisplayString($props.post.title), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_7, [_renderSlot(_ctx.$slots, \"body\", {}, () => [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString($props.post.body), 1 /* TEXT */)]), _hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.comments, comment => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: comment.id,\n        class: \"comment-item\"\n      }, [_createElementVNode(\"img\", {\n        src: $options.getGravatarUrl(comment.email),\n        alt: \"User Avatar\",\n        class: \"comment-avatar\"\n      }, null, 8 /* PROPS */, _hoisted_12), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"h4\", null, _toDisplayString($options.getUserName(comment.email)), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(comment.body), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])])])])])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 3 /* FORWARDED */\n  });\n}","map":{"version":3,"names":["_imports_0","key","class","_createElementVNode","src","alt","_hoisted_4","_createBlock","_Transition","name","default","_withCtx","$props","visible","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","close","_hoisted_5","_hoisted_6","_renderSlot","_ctx","$slots","_toDisplayString","post","title","_hoisted_7","_hoisted_8","body","_hoisted_9","_hoisted_10","_hoisted_11","_Fragment","_renderList","comments","comment","id","getGravatarUrl","email","_hoisted_12","_hoisted_13","getUserName","_createCommentVNode","_"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\ModalPostsComponent.vue"],"sourcesContent":["<template>\r\n  <transition name=\"modal-posts\">\r\n    <div class=\"modal-mask\" v-if=\"visible\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\">\r\n          <button class=\"close\" @click=\"close\">\r\n            <img src=\"@/assets/tabler_square-rounded-x.png\" alt=\"Close Icon\" />\r\n          </button>\r\n          <div class=\"modal-header\">\r\n            <slot name=\"header\">\r\n              <h1>{{ post.title }}</h1>\r\n            </slot>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <slot name=\"body\">\r\n              <div class=\"post-detail\">\r\n                <p>{{ post.body }}</p>\r\n              </div>\r\n              <div class=\"separator\"></div>\r\n              <div class=\"comments-section\">\r\n                <h3>Comments:</h3>\r\n                <ul>\r\n                  <li\r\n                    v-for=\"comment in comments\"\r\n                    :key=\"comment.id\"\r\n                    class=\"comment-item\"\r\n                  >\r\n                    <img\r\n                      :src=\"getGravatarUrl(comment.email)\"\r\n                      alt=\"User Avatar\"\r\n                      class=\"comment-avatar\"\r\n                    />\r\n                    <div class=\"comment-content\">\r\n                      <h4>{{ getUserName(comment.email) }}</h4>\r\n                      <p>{{ comment.body }}</p>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport md5 from \"md5\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"ModalPostsComponent\",\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    post: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    comments: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      users: [],\r\n    };\r\n  },\r\n  methods: {\r\n    close() {\r\n      this.$emit(\"close\");\r\n    },\r\n    getGravatarUrl(email) {\r\n      const hash = md5(email.trim().toLowerCase());\r\n      return `https://www.gravatar.com/avatar/${hash}?d=identicon`;\r\n    },\r\n    getUserName(email) {\r\n      const user = this.users.find(\r\n        (user) => user.email.toLowerCase() === email.toLowerCase()\r\n      );\r\n      return user ? user.name : \"Unknown User\";\r\n    },\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://jsonplaceholder.typicode.com/users\"\r\n        );\r\n        this.users = response.data;\r\n        console.log(\"Users fetched:\", this.users); // Kullanıcıların yüklendiğini doğrulamak için\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchUsers();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-container {\r\n  width: 70%;\r\n  max-width: 1000px;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-header,\r\n.modal-footer {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-body {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.post-detail {\r\n  flex: 2;\r\n  margin-right: 20px;\r\n}\r\n\r\n.separator {\r\n  width: 1px;\r\n  background-color: #e9ecef;\r\n  margin: 0 20px;\r\n}\r\n\r\n.comments-section {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n}\r\n\r\n.comment-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.comment-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.comment-content {\r\n  flex: 2;\r\n}\r\n\r\n.comment-content h4 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comment-content p {\r\n  margin: 5px 0 0;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"],"mappings":";OAMiBA,UAA0C;;EAN3DC,GAAA;EAESC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAiB;gCAExBC,mBAAA,CAAmE;EAA9DC,GAA0C,EAA1CJ,UAA0C;EAACK,GAAG,EAAC;;oBAApDC,UAAmE,C;;EAEhEJ,KAAK,EAAC;AAAc;;EAKpBA,KAAK,EAAC;AAAY;;EAEdA,KAAK,EAAC;AAAa;gCAGxBC,mBAAA,CAA6B;EAAxBD,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAkB;iCAC3BC,mBAAA,CAAkB,YAAd,WAAS;oBApB7B;;EAgCyBD,KAAK,EAAC;AAAiB;;uBA/B9CK,YAAA,CA2CaC,WAAA;IA3CDC,IAAI,EAAC;EAAa;IADhCC,OAAA,EAAAC,QAAA,CAEI,MAyCM,CAzCwBC,MAAA,CAAAC,OAAO,I,cAArCC,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCJZ,mBAAA,CAuCM,OAvCNa,UAuCM,GAtCJb,mBAAA,CAqCM,OArCNc,UAqCM,GApCJd,mBAAA,CAES;MAFDD,KAAK,EAAC,OAAO;MAAEgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;OAL7C,IAAAG,UAAA,IAQUpB,mBAAA,CAIM,OAJNqB,UAIM,GAHJC,WAAA,CAEOC,IAAA,CAAAC,MAAA,gBAFP,MAEO,CADLxB,mBAAA,CAAyB,YAAAyB,gBAAA,CAAlBhB,MAAA,CAAAiB,IAAI,CAACC,KAAK,iB,KAGrB3B,mBAAA,CA2BM,OA3BN4B,UA2BM,GA1BJN,WAAA,CAyBOC,IAAA,CAAAC,MAAA,cAzBP,MAyBO,CAxBLxB,mBAAA,CAEM,OAFN6B,UAEM,GADJ7B,mBAAA,CAAsB,WAAAyB,gBAAA,CAAhBhB,MAAA,CAAAiB,IAAI,CAACI,IAAI,iB,GAEjBC,UAA6B,EAC7B/B,mBAAA,CAmBM,OAnBNgC,WAmBM,GAlBJC,WAAkB,EAClBjC,mBAAA,CAgBK,c,kBAfHW,mBAAA,CAcKuB,SAAA,QApCvBC,WAAA,CAuBsC1B,MAAA,CAAA2B,QAAQ,EAAnBC,OAAO;2BADhB1B,mBAAA,CAcK;QAZFb,GAAG,EAAEuC,OAAO,CAACC,EAAE;QAChBvC,KAAK,EAAC;UAENC,mBAAA,CAIE;QAHCC,GAAG,EAAEiB,QAAA,CAAAqB,cAAc,CAACF,OAAO,CAACG,KAAK;QAClCtC,GAAG,EAAC,aAAa;QACjBH,KAAK,EAAC;8BA9B5B0C,WAAA,GAgCoBzC,mBAAA,CAGM,OAHN0C,WAGM,GAFJ1C,mBAAA,CAAyC,YAAAyB,gBAAA,CAAlCP,QAAA,CAAAyB,WAAW,CAACN,OAAO,CAACG,KAAK,mBAChCxC,mBAAA,CAAyB,WAAAyB,gBAAA,CAAnBY,OAAO,CAACP,IAAI,iB;oDAlCxCc,mBAAA,e;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}