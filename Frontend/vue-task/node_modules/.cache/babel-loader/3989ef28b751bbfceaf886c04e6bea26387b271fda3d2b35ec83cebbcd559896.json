{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ModalPostsComponent from \"./ModalPostsComponent.vue\";\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\nimport axios from \"axios\";\nimport { ref, onMounted } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nexport default {\n  name: \"PostsPage\",\n  components: {\n    SidebarComponent,\n    ModalPostsComponent\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const posts = ref([]);\n    const showModal = ref(false);\n    const selectedPost = ref({});\n    const comments = ref([]);\n    const users = ref([]);\n    const selectedUser = ref(null);\n    const fetchPosts = async userId => {\n      try {\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`);\n        posts.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/users`);\n        users.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    };\n    const fetchUser = async userId => {\n      try {\n        const userResponse = await axios.get(`https://jsonplaceholder.typicode.com/users/${userId}`);\n        selectedUser.value = userResponse.data;\n      } catch (error) {\n        console.error(\"Error fetching user:\", error);\n      }\n    };\n    const fetchComments = async postId => {\n      try {\n        const commentsResponse = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);\n        comments.value = commentsResponse.data;\n      } catch (error) {\n        console.error(\"Error fetching comments:\", error);\n      }\n    };\n    const openPost = post => {\n      selectedPost.value = post;\n      fetchComments(post.id);\n      showModal.value = true;\n    };\n    const closeModal = () => {\n      showModal.value = false;\n      selectedPost.value = null;\n      comments.value = [];\n    };\n    const goBack = () => {\n      router.push(\"/\");\n    };\n    onMounted(() => {\n      const userId = route.query.userId;\n      if (userId) {\n        fetchPosts(userId);\n        fetchUser(userId);\n      }\n      fetchUsers();\n    });\n    return {\n      posts,\n      showModal,\n      selectedPost,\n      comments,\n      users,\n      selectedUser,\n      goBack,\n      openPost,\n      closeModal\n    };\n  }\n};","map":{"version":3,"names":["ModalPostsComponent","SidebarComponent","axios","ref","onMounted","useRouter","useRoute","name","components","setup","router","route","posts","showModal","selectedPost","comments","users","selectedUser","fetchPosts","userId","response","get","value","data","error","console","fetchUsers","fetchUser","userResponse","fetchComments","postId","commentsResponse","openPost","post","id","closeModal","goBack","push","query"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\ModalPostsComponent.vue"],"sourcesContent":["<template>\r\n  <transition name=\"modal-posts\">\r\n    <div class=\"modal-mask\" v-if=\"visible\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\">\r\n          <button class=\"close\" @click=\"close\">\r\n            <img src=\"@/assets/tabler_square-rounded-x.png\" alt=\"Close Icon\" />\r\n          </button>\r\n          <div class=\"modal-header\">\r\n            <slot name=\"header\">\r\n              <h1>{{ post.title }}</h1>\r\n            </slot>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <slot name=\"body\">\r\n              <div class=\"post-detail\">\r\n                <p>{{ post.body }}</p>\r\n              </div>\r\n              <div class=\"comments-section\">\r\n                <h3>Comments:</h3>\r\n                <ul>\r\n                  <li\r\n                    v-for=\"comment in comments\"\r\n                    :key=\"comment.id\"\r\n                    class=\"comment-item\"\r\n                  >\r\n                    <img\r\n                      :src=\"getGravatarUrl(comment.email)\"\r\n                      alt=\"User Avatar\"\r\n                      class=\"comment-avatar\"\r\n                    />\r\n                    <div class=\"comment-content\">\r\n                      <h4>{{ getUserName(comment.email) }}</h4>\r\n                      <p>{{ comment.body }}</p>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport ModalPostsComponent from \"./ModalPostsComponent.vue\";\r\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"PostsPage\",\r\n  components: {\r\n    SidebarComponent,\r\n    ModalPostsComponent,\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const posts = ref([]);\r\n    const showModal = ref(false);\r\n    const selectedPost = ref({});\r\n    const comments = ref([]);\r\n    const users = ref([]);\r\n    const selectedUser = ref(null);\r\n\r\n    const fetchPosts = async (userId) => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\r\n        );\r\n        posts.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/users`\r\n        );\r\n        users.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchUser = async (userId) => {\r\n      try {\r\n        const userResponse = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/users/${userId}`\r\n        );\r\n        selectedUser.value = userResponse.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching user:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchComments = async (postId) => {\r\n      try {\r\n        const commentsResponse = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\r\n        );\r\n        comments.value = commentsResponse.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching comments:\", error);\r\n      }\r\n    };\r\n\r\n    const openPost = (post) => {\r\n      selectedPost.value = post;\r\n      fetchComments(post.id);\r\n      showModal.value = true;\r\n    };\r\n\r\n    const closeModal = () => {\r\n      showModal.value = false;\r\n      selectedPost.value = null;\r\n      comments.value = [];\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.push(\"/\");\r\n    };\r\n\r\n    onMounted(() => {\r\n      const userId = route.query.userId;\r\n      if (userId) {\r\n        fetchPosts(userId);\r\n        fetchUser(userId);\r\n      }\r\n      fetchUsers();\r\n    });\r\n\r\n    return {\r\n      posts,\r\n      showModal,\r\n      selectedPost,\r\n      comments,\r\n      users,\r\n      selectedUser,\r\n      goBack,\r\n      openPost,\r\n      closeModal,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-container {\r\n  width: 70%;\r\n  max-width: 1000px;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.modal-header,\r\n.modal-footer {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.close {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-body {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.post-detail {\r\n  flex: 2;\r\n  margin-right: 20px;\r\n}\r\n\r\n.comments-section {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n}\r\n\r\n.comment-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.comment-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.comment-content {\r\n  flex: 2;\r\n}\r\n\r\n.comment-content h4 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comment-content p {\r\n  margin: 5px 0 0;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}