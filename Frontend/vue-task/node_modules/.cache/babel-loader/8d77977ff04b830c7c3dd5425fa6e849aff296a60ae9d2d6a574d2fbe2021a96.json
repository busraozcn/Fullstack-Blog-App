{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '@/assets/tabler_square-rounded-x.png';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-mask\"\n};\nconst _hoisted_2 = {\n  class: \"modal-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"modal-container\"\n};\nconst _hoisted_4 = {\n  class: \"modal-header\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Close Icon\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = {\n  class: \"modal-body\"\n};\nconst _hoisted_8 = {\n  class: \"post-detail\"\n};\nconst _hoisted_9 = {\n  class: \"comments-section\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Comments:\", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"comment-avatar-name\"\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"comment-name\"\n};\nconst _hoisted_14 = {\n  class: \"comment-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"modal-posts\"\n  }, {\n    default: _withCtx(() => [$props.visible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_renderSlot(_ctx.$slots, \"header\", {}, () => [_createElementVNode(\"h1\", null, _toDisplayString($props.post.title), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      class: \"close\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.close && $options.close(...args))\n    }, [..._hoisted_6])]), _createElementVNode(\"div\", _hoisted_7, [_renderSlot(_ctx.$slots, \"body\", {}, () => [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString($props.post.body), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.comments, comment => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: comment.id,\n        class: \"comment-item\"\n      }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"img\", {\n        src: $options.getGravatarUrl(comment.email),\n        alt: \"User Avatar\",\n        class: \"comment-avatar\"\n      }, null, 8 /* PROPS */, _hoisted_12), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"h4\", null, _toDisplayString(comment.name), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", null, _toDisplayString(comment.body), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])])])])])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 3 /* FORWARDED */\n  });\n}","map":{"version":3,"names":["_imports_0","key","class","_createElementVNode","src","alt","_hoisted_5","_createBlock","_Transition","name","default","_withCtx","$props","visible","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_renderSlot","_ctx","$slots","_toDisplayString","post","title","onClick","_cache","args","$options","close","_hoisted_6","_hoisted_7","_hoisted_8","body","_hoisted_9","_hoisted_10","_Fragment","_renderList","comments","comment","id","_hoisted_11","getGravatarUrl","email","_hoisted_12","_hoisted_13","_hoisted_14","_createCommentVNode","_"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\n  <transition name=\"modal-posts\">\n    <div class=\"modal-mask\" v-if=\"visible\">\n      <div class=\"modal-wrapper\">\n        <div class=\"modal-container\">\n          <div class=\"modal-header\">\n            <slot name=\"header\">\n              <h1>{{ post.title }}</h1>\n            </slot>\n            <button class=\"close\" @click=\"close\">\n              <img\n                src=\"@/assets/tabler_square-rounded-x.png\"\n                alt=\"Close Icon\"\n              />\n            </button>\n          </div>\n          <div class=\"modal-body\">\n            <slot name=\"body\">\n              <div class=\"post-detail\">\n                <p>{{ post.body }}</p>\n              </div>\n              <div class=\"comments-section\">\n                <h3>Comments:</h3>\n                <ul>\n                  <li\n                    v-for=\"comment in comments\"\n                    :key=\"comment.id\"\n                    class=\"comment-item\"\n                  >\n                    <div class=\"comment-avatar-name\">\n                      <img\n                        :src=\"getGravatarUrl(comment.email)\"\n                        alt=\"User Avatar\"\n                        class=\"comment-avatar\"\n                      />\n                      <div class=\"comment-name\">\n                        <h4>{{ comment.name }}</h4>\n                      </div>\n                    </div>\n                    <div class=\"comment-body\">\n                      <p>{{ comment.body }}</p>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n<script>\nimport md5 from \"md5\";\n\nexport default {\n  name: \"ModalPostsComponent\",\n  props: {\n    visible: {\n      type: Boolean,\n      default: false,\n    },\n    post: {\n      type: Object,\n      required: true,\n    },\n    comments: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      users: [],\n    };\n  },\n  methods: {\n    close() {\n      this.$emit(\"close\");\n    },\n    getGravatarUrl(email) {\n      const hash = md5(email.trim().toLowerCase());\n      return `https://www.gravatar.com/avatar/${hash}?d=identicon`;\n    },\n  },\n};\n</script>\n<style>\n.modal-mask {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-container {\n  width: 70%;\n  max-width: 1200px;\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 0;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.close {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.modal-body {\n  display: flex;\n  justify-content: space-between;\n  overflow-y: auto;\n}\n\n.post-detail {\n  flex: 1;\n  margin-right: 20px;\n  color: #000000b2;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.comments-section {\n  flex: 1;\n  overflow-y: auto;\n  max-height: 400px;\n}\n\nh3 {\n  font-family: \"Poppins\";\n  font-size: 20px;\n  font-weight: 600;\n  line-height: 32px;\n  text-align: left;\n  color: #26303e;\n}\n\n.comment-item {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin-bottom: 15px;\n}\n\n.comment-avatar-name {\n  display: flex;\n  align-items: center;\n}\n\n.comment-avatar {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.comment-name {\n  text-align: left;\n}\n\n.comment-body {\n  text-align: left;\n  margin-top: 5px;\n  margin-left: 50px; /* Add this to align the comment body with the avatar */\n}\n\n.comment-body p {\n  margin: 5px 0 0;\n  font-size: 14px;\n}\n</style>\n"],"mappings":";OAWgBA,UAA0C;;EAX1DC,GAAA;EAESC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAc;gCAKrBC,mBAAA,CAGE;EAFAC,GAA0C,EAA1CJ,UAA0C;EAC1CK,GAAG,EAAC;;oBAFNC,UAGE,C;;EAGDJ,KAAK,EAAC;AAAY;;EAEdA,KAAK,EAAC;AAAa;;EAGnBA,KAAK,EAAC;AAAkB;iCAC3BC,mBAAA,CAAkB,YAAd,WAAS;;EAOJD,KAAK,EAAC;AAAqB;oBA7BpD;;EAmC2BA,KAAK,EAAC;AAAc;;EAItBA,KAAK,EAAC;AAAc;;uBAtC3CK,YAAA,CAiDaC,WAAA;IAjDDC,IAAI,EAAC;EAAa;IADhCC,OAAA,EAAAC,QAAA,CAEI,MA+CM,CA/CwBC,MAAA,CAAAC,OAAO,I,cAArCC,mBAAA,CA+CM,OA/CNC,UA+CM,GA9CJZ,mBAAA,CA6CM,OA7CNa,UA6CM,GA5CJb,mBAAA,CA2CM,OA3CNc,UA2CM,GA1CJd,mBAAA,CAUM,OAVNe,UAUM,GATJC,WAAA,CAEOC,IAAA,CAAAC,MAAA,gBAFP,MAEO,CADLlB,mBAAA,CAAyB,YAAAmB,gBAAA,CAAlBV,MAAA,CAAAW,IAAI,CAACC,KAAK,iB,GAEnBrB,mBAAA,CAKS;MALDD,KAAK,EAAC,OAAO;MAAEuB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;OAT/C,IAAAG,UAAA,G,GAgBU3B,mBAAA,CA8BM,OA9BN4B,UA8BM,GA7BJZ,WAAA,CA4BOC,IAAA,CAAAC,MAAA,cA5BP,MA4BO,CA3BLlB,mBAAA,CAEM,OAFN6B,UAEM,GADJ7B,mBAAA,CAAsB,WAAAmB,gBAAA,CAAhBV,MAAA,CAAAW,IAAI,CAACU,IAAI,iB,GAEjB9B,mBAAA,CAuBM,OAvBN+B,UAuBM,GAtBJC,WAAkB,EAClBhC,mBAAA,CAoBK,c,kBAnBHW,mBAAA,CAkBKsB,SAAA,QA1CvBC,WAAA,CAyBsCzB,MAAA,CAAA0B,QAAQ,EAAnBC,OAAO;2BADhBzB,mBAAA,CAkBK;QAhBFb,GAAG,EAAEsC,OAAO,CAACC,EAAE;QAChBtC,KAAK,EAAC;UAENC,mBAAA,CASM,OATNsC,WASM,GARJtC,mBAAA,CAIE;QAHCC,GAAG,EAAEwB,QAAA,CAAAc,cAAc,CAACH,OAAO,CAACI,KAAK;QAClCtC,GAAG,EAAC,aAAa;QACjBH,KAAK,EAAC;8BAjC9B0C,WAAA,GAmCsBzC,mBAAA,CAEM,OAFN0C,WAEM,GADJ1C,mBAAA,CAA2B,YAAAmB,gBAAA,CAApBiB,OAAO,CAAC9B,IAAI,iB,KAGvBN,mBAAA,CAEM,OAFN2C,WAEM,GADJ3C,mBAAA,CAAyB,WAAAmB,gBAAA,CAAnBiB,OAAO,CAACN,IAAI,iB;oDAxCxCc,mBAAA,e;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}