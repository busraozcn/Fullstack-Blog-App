{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  id: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SidebarComponent = _resolveComponent(\"SidebarComponent\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.selectedUser && $setup.showSidebar ? (_openBlock(), _createBlock(_component_SidebarComponent, {\n    key: 0,\n    user: $setup.selectedUser\n  }, null, 8 /* PROPS */, [\"user\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_router_view, {\n    onUserSelected: $setup.onUserSelected\n  }, null, 8 /* PROPS */, [\"onUserSelected\"])])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","$setup","selectedUser","showSidebar","_createBlock","_component_SidebarComponent","key","user","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_router_view","onUserSelected"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <SidebarComponent v-if=\"selectedUser && showSidebar\" :user=\"selectedUser\" />\n    <div id=\"content\">\n      <router-view @user-selected=\"onUserSelected\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport SidebarComponent from \"@/components/sidebar/SidebarComponent.vue\";\nimport axios from \"axios\";\nimport { ref, onMounted, watch } from \"vue\";\nimport { useRoute } from \"vue-router\";\n\nexport default {\n  name: \"App\",\n  components: {\n    SidebarComponent,\n  },\n  setup() {\n    const selectedUser = ref(null);\n    const showSidebar = ref(false);\n    const route = useRoute();\n\n    const fetchUser = async (userId) => {\n      try {\n        const response = await axios.get(\n          `https://jsonplaceholder.typicode.com/users/${userId}`\n        );\n        selectedUser.value = response.data;\n      } catch (error) {\n        console.error(\"Error fetching user:\", error);\n      }\n    };\n\n    onMounted(() => {\n      const userId = route.query.userId; // URL'den userId'yi alÄ±n\n      if (userId) {\n        fetchUser(userId);\n        showSidebar.value = true;\n      }\n    });\n\n    watch(route, (newRoute) => {\n      const userId = newRoute.query.userId;\n      if (userId) {\n        fetchUser(userId);\n        showSidebar.value = true;\n      } else {\n        showSidebar.value = false;\n      }\n    });\n\n    const onUserSelected = (user) => {\n      selectedUser.value = user;\n      showSidebar.value = true;\n    };\n\n    return {\n      selectedUser,\n      showSidebar,\n      onUserSelected,\n    };\n  },\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Poppins:wght@400&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400&display=swap\");\n\n#app {\n  font-family: Avenir, Helvetica, Arial, Poppins, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  display: flex;\n}\n\n#content {\n  margin-left: 260px;\n  padding: 20px;\n  flex: 1;\n}\n\n#app > div {\n  flex: 1;\n}\n\n.sidebar {\n  display: none;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EAENA,EAAE,EAAC;AAAS;;;;uBAFnBC,mBAAA,CAKM,OALNC,UAKM,GAJoBC,MAAA,CAAAC,YAAY,IAAID,MAAA,CAAAE,WAAW,I,cAAnDC,YAAA,CAA4EC,2BAAA;IAFhFC,GAAA;IAE0DC,IAAI,EAAEN,MAAA,CAAAC;uCAFhEM,mBAAA,gBAGIC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAA+CC,sBAAA;IAAjCC,cAAa,EAAEZ,MAAA,CAAAY;EAAc,4C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}