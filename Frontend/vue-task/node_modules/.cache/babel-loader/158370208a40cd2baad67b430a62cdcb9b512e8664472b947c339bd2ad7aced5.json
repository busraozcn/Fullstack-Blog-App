{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport axios from \"axios\";\nexport default {\n  name: \"TodosPage\",\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const todos = ref([]);\n    const selectedUser = ref(null);\n    const fetchUserAndTodos = async userId => {\n      try {\n        const userResponse = await axios.get(`http://127.0.0.1:8000/api/users/${userId}`);\n        selectedUser.value = userResponse.data;\n        const todosResponse = await axios.get(`http://127.0.0.1:8000/api/todos?user=${userId}`);\n        todos.value = todosResponse.data;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const goBack = () => {\n      router.push(\"/\");\n    };\n    onMounted(() => {\n      const userId = route.query.userId;\n      if (userId) {\n        fetchUserAndTodos(userId);\n      }\n    });\n    return {\n      todos,\n      selectedUser,\n      goBack\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","useRoute","axios","name","setup","router","route","todos","selectedUser","fetchUserAndTodos","userId","userResponse","get","value","data","todosResponse","error","console","goBack","push","query"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\TodosPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"todos-page\">\r\n    <div class=\"geritusu\" @click=\"goBack\">\r\n      <img\r\n        src=\"@/assets/tabler_square-rounded-arrow-left.png\"\r\n        alt=\"Go Home Icon\"\r\n        class=\"geritusu-icon\"\r\n      />\r\n      <span class=\"geritusu-text\">Go Home</span>\r\n    </div>\r\n    <div class=\"todos-container\">\r\n      <br />\r\n      <br /><br />\r\n      <ul>\r\n        <li v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo-item\">\r\n          <input type=\"checkbox\" v-model=\"todo.completed\" class=\"checkbox\" />\r\n          <span :class=\"{ completed: todo.completed }\">{{ todo.title }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"TodosPage\",\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const todos = ref([]);\r\n    const selectedUser = ref(null);\r\n\r\n    const fetchUserAndTodos = async (userId) => {\r\n      try {\r\n        const userResponse = await axios.get(\r\n          `http://127.0.0.1:8000/api/users/${userId}`\r\n        );\r\n        selectedUser.value = userResponse.data;\r\n\r\n        const todosResponse = await axios.get(\r\n          `http://127.0.0.1:8000/api/todos?user=${userId}`\r\n        );\r\n        todos.value = todosResponse.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.push(\"/\");\r\n    };\r\n\r\n    onMounted(() => {\r\n      const userId = route.query.userId;\r\n      if (userId) {\r\n        fetchUserAndTodos(userId);\r\n      }\r\n    });\r\n\r\n    return {\r\n      todos,\r\n      selectedUser,\r\n      goBack,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.todos-page {\r\n  display: flex;\r\n}\r\n\r\n.geritusu {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 280px; /* Sidebar genişliği kadar */\r\n  margin-top: 50px;\r\n}\r\n\r\n.geritusu-icon {\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.geritusu-text {\r\n  font-family: \"Poppins\", sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  line-height: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.todos-container {\r\n  margin-left: 300px; /* Sidebar genişliği ve biraz boşluk */\r\n  padding: 20px;\r\n}\r\n\r\nul {\r\n  list-style-type: none; /* Başlangıç noktalarını kaldırmak için */\r\n  padding: 0;\r\n}\r\n\r\nli.todo-item {\r\n  text-align: left;\r\n  height: 48px; /* Her bir todo maddesinin yüksekliği */\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: \"Roboto\", sans-serif; /* Yazı tipi Roboto */\r\n  gap: 10px; /* Checkbox ile metin arasındaki boşluk */\r\n  color: #485b69;\r\n  font-size: 14px;\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n  appearance: none;\r\n  width: 14px;\r\n  height: 14px;\r\n  border: 2px solid black;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-weight: 4000;\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked {\r\n  background-color: #4f359b;\r\n  border: none;\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 2px;\r\n  left: 5px;\r\n  width: 3px;\r\n  height: 8px;\r\n  border: solid white;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n}\r\n</style>\r\n"],"mappings":";AAwBA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,KAAI,GAAIT,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMU,YAAW,GAAIV,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMW,iBAAgB,GAAI,MAAOC,MAAM,IAAK;MAC1C,IAAI;QACF,MAAMC,YAAW,GAAI,MAAMT,KAAK,CAACU,GAAG,CAClC,mCAAmCF,MAAM,EAC3C,CAAC;QACDF,YAAY,CAACK,KAAI,GAAIF,YAAY,CAACG,IAAI;QAEtC,MAAMC,aAAY,GAAI,MAAMb,KAAK,CAACU,GAAG,CACnC,wCAAwCF,MAAM,EAChD,CAAC;QACDH,KAAK,CAACM,KAAI,GAAIE,aAAa,CAACD,IAAI;MAClC,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,MAAME,MAAK,GAAIA,CAAA,KAAM;MACnBb,MAAM,CAACc,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAEDpB,SAAS,CAAC,MAAM;MACd,MAAMW,MAAK,GAAIJ,KAAK,CAACc,KAAK,CAACV,MAAM;MACjC,IAAIA,MAAM,EAAE;QACVD,iBAAiB,CAACC,MAAM,CAAC;MAC3B;IACF,CAAC,CAAC;IAEF,OAAO;MACLH,KAAK;MACLC,YAAY;MACZU;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}