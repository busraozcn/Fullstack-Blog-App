{"ast":null,"code":"import ModalPostsComponent from \"./ModalPostsComponent.vue\";\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  name: \"PostsPage\",\n  components: {\n    SidebarComponent,\n    ModalPostsComponent\n  },\n  data() {\n    return {\n      posts: [],\n      showModal: false,\n      selectedPost: {}\n    };\n  },\n  created() {\n    this.fetchPosts();\n  },\n  methods: {\n    async fetchPosts() {\n      try {\n        const userId = this.selectedUser.id;\n        const response = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`);\n        this.posts = response.data;\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    },\n    openPost(post) {\n      this.selectedPost = post;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    }\n  },\n  setup() {\n    const store = useStore();\n    const selectedUser = computed(() => store.getters.selectedUser);\n    return {\n      selectedUser\n    };\n  },\n  watch: {\n    selectedUser: {\n      handler(newUser) {\n        if (newUser) {\n          this.fetchPosts();\n        }\n      },\n      immediate: true\n    }\n  }\n};","map":{"version":3,"names":["ModalPostsComponent","SidebarComponent","computed","useStore","axios","name","components","data","posts","showModal","selectedPost","created","fetchPosts","methods","userId","selectedUser","id","response","get","error","console","openPost","post","closeModal","setup","store","getters","watch","handler","newUser","immediate"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\PostsPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"posts-page\">\r\n    <SidebarComponent />\r\n    <div class=\"content\">\r\n      <h1>Posts Page</h1>\r\n      <ul>\r\n        <li v-for=\"post in posts\" :key=\"post.id\">\r\n          <a href=\"#\" @click.prevent=\"openPost(post)\">{{ post.title }}</a>\r\n        </li>\r\n      </ul>\r\n      <ModalPostsComponent :visible=\"showModal\" @close=\"closeModal\">\r\n        <template #header>\r\n          <h2>{{ selectedPost.title }}</h2>\r\n        </template>\r\n        <template #body>\r\n          <p>{{ selectedPost.body }}</p>\r\n        </template>\r\n        <template #footer>\r\n          <button @click=\"closeModal\">Close</button>\r\n        </template>\r\n      </ModalPostsComponent>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ModalPostsComponent from \"./ModalPostsComponent.vue\";\r\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\r\nimport { computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"PostsPage\",\r\n  components: {\r\n    SidebarComponent,\r\n    ModalPostsComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      showModal: false,\r\n      selectedPost: {},\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchPosts();\r\n  },\r\n  methods: {\r\n    async fetchPosts() {\r\n      try {\r\n        const userId = this.selectedUser.id;\r\n        const response = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\r\n        );\r\n        this.posts = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    },\r\n    openPost(post) {\r\n      this.selectedPost = post;\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const selectedUser = computed(() => store.getters.selectedUser);\r\n\r\n    return {\r\n      selectedUser,\r\n    };\r\n  },\r\n  watch: {\r\n    selectedUser: {\r\n      handler(newUser) {\r\n        if (newUser) {\r\n          this.fetchPosts();\r\n        }\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.posts-page {\r\n  display: flex;\r\n}\r\n\r\n.content {\r\n  margin-left: 260px;\r\n  padding: 20px;\r\n}\r\n</style>\r\n"],"mappings":"AA0BA,OAAOA,mBAAkB,MAAO,2BAA2B;AAC3D,OAAOC,gBAAe,MAAO,gCAAgC;AAC7D,SAASC,QAAO,QAAS,KAAK;AAC9B,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVL,gBAAgB;IAChBD;EACF,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE,CAAC;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,MAAK,GAAI,IAAI,CAACC,YAAY,CAACC,EAAE;QACnC,MAAMC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAC9B,qDAAqDJ,MAAM,EAC7D,CAAC;QACD,IAAI,CAACN,KAAI,GAAIS,QAAQ,CAACV,IAAI;MAC5B,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDE,QAAQA,CAACC,IAAI,EAAE;MACb,IAAI,CAACZ,YAAW,GAAIY,IAAI;MACxB,IAAI,CAACb,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDc,UAAUA,CAAA,EAAG;MACX,IAAI,CAACd,SAAQ,GAAI,KAAK;IACxB;EACF,CAAC;EACDe,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAItB,QAAQ,CAAC,CAAC;IACxB,MAAMY,YAAW,GAAIb,QAAQ,CAAC,MAAMuB,KAAK,CAACC,OAAO,CAACX,YAAY,CAAC;IAE/D,OAAO;MACLA;IACF,CAAC;EACH,CAAC;EACDY,KAAK,EAAE;IACLZ,YAAY,EAAE;MACZa,OAAOA,CAACC,OAAO,EAAE;QACf,IAAIA,OAAO,EAAE;UACX,IAAI,CAACjB,UAAU,CAAC,CAAC;QACnB;MACF,CAAC;MACDkB,SAAS,EAAE;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}