{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from \"vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport axios from \"axios\";\nexport default {\n  name: \"AlbumsPage\",\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const albums = ref([]);\n    const selectedUser = ref(null);\n    const fetchUserAndAlbums = async userId => {\n      try {\n        const userResponse = await axios.get(`https://jsonplaceholder.typicode.com/users/${userId}`);\n        selectedUser.value = userResponse.data;\n        const albumsResponse = await axios.get(`https://jsonplaceholder.typicode.com/albums?userId=${userId}`);\n        const albumsData = albumsResponse.data;\n        for (const album of albumsData) {\n          const photosResponse = await axios.get(`https://jsonplaceholder.typicode.com/photos?albumId=${album.id}`);\n          album.photos = photosResponse.data;\n        }\n        albums.value = albumsData;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    const goBack = () => {\n      router.push(\"/\");\n    };\n    const goToAlbum = albumId => {\n      const userId = route.query.userId;\n      router.push(`/albums/${albumId}?userId=${userId}`);\n    };\n    onMounted(() => {\n      const userId = route.query.userId;\n      if (userId) {\n        fetchUserAndAlbums(userId);\n      }\n    });\n    return {\n      albums,\n      selectedUser,\n      goBack,\n      goToAlbum\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","useRoute","axios","name","setup","router","route","albums","selectedUser","fetchUserAndAlbums","userId","userResponse","get","value","data","albumsResponse","albumsData","album","photosResponse","id","photos","error","console","goBack","push","goToAlbum","albumId","query"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\AlbumsPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"albums-page\">\r\n    <div class=\"content\">\r\n      <div class=\"geritusu\" @click=\"goBack\">\r\n        <img\r\n          src=\"@/assets/tabler_square-rounded-arrow-left.png\"\r\n          alt=\"Go Home Icon\"\r\n          class=\"geritusu-icon\"\r\n        />\r\n        <span class=\"geritusu-text\">Go Home</span>\r\n      </div>\r\n      <div class=\"albums-list\">\r\n        <div\r\n          v-for=\"album in albums\"\r\n          :key=\"album.id\"\r\n          class=\"album-card\"\r\n          @click=\"goToAlbum(album.id)\"\r\n        >\r\n          <div class=\"album-thumbnails\">\r\n            <img\r\n              v-for=\"(photo, index) in album.photos.slice(0, 4)\"\r\n              :key=\"index\"\r\n              :src=\"photo.thumbnailUrl\"\r\n              alt=\"Thumbnail\"\r\n            />\r\n          </div>\r\n          <div class=\"album-title\">\r\n            <h3>{{ album.title }}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"AlbumsPage\",\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const albums = ref([]);\r\n    const selectedUser = ref(null);\r\n\r\n    const fetchUserAndAlbums = async (userId) => {\r\n      try {\r\n        const userResponse = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/users/${userId}`\r\n        );\r\n        selectedUser.value = userResponse.data;\r\n\r\n        const albumsResponse = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/albums?userId=${userId}`\r\n        );\r\n        const albumsData = albumsResponse.data;\r\n\r\n        for (const album of albumsData) {\r\n          const photosResponse = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/photos?albumId=${album.id}`\r\n          );\r\n          album.photos = photosResponse.data;\r\n        }\r\n\r\n        albums.value = albumsData;\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.push(\"/\");\r\n    };\r\n\r\n    const goToAlbum = (albumId) => {\r\n      const userId = route.query.userId;\r\n      router.push(`/albums/${albumId}?userId=${userId}`);\r\n    };\r\n\r\n    onMounted(() => {\r\n      const userId = route.query.userId;\r\n      if (userId) {\r\n        fetchUserAndAlbums(userId);\r\n      }\r\n    });\r\n\r\n    return {\r\n      albums,\r\n      selectedUser,\r\n      goBack,\r\n      goToAlbum,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.albums-page {\r\n  display: flex;\r\n}\r\n\r\n.content {\r\n  margin-left: 260px;\r\n  padding: 20px;\r\n}\r\n\r\n.albums-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.album-card {\r\n  width: 318px;\r\n  height: 256px;\r\n  cursor: pointer;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  padding-bottom: 10%;\r\n  padding-left: 1%;\r\n  padding-top: 1%;\r\n  padding-right: 1%;\r\n}\r\n\r\n.album-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.album-thumbnails {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(2, 1fr);\r\n  width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.album-thumbnails img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.album-title {\r\n  padding: 10px;\r\n  background: #fff;\r\n}\r\n\r\n.album-title h3 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":";AAoCA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,MAAK,GAAIT,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMU,YAAW,GAAIV,GAAG,CAAC,IAAI,CAAC;IAE9B,MAAMW,kBAAiB,GAAI,MAAOC,MAAM,IAAK;MAC3C,IAAI;QACF,MAAMC,YAAW,GAAI,MAAMT,KAAK,CAACU,GAAG,CAClC,8CAA8CF,MAAM,EACtD,CAAC;QACDF,YAAY,CAACK,KAAI,GAAIF,YAAY,CAACG,IAAI;QAEtC,MAAMC,cAAa,GAAI,MAAMb,KAAK,CAACU,GAAG,CACpC,sDAAsDF,MAAM,EAC9D,CAAC;QACD,MAAMM,UAAS,GAAID,cAAc,CAACD,IAAI;QAEtC,KAAK,MAAMG,KAAI,IAAKD,UAAU,EAAE;UAC9B,MAAME,cAAa,GAAI,MAAMhB,KAAK,CAACU,GAAG,CACpC,uDAAuDK,KAAK,CAACE,EAAE,EACjE,CAAC;UACDF,KAAK,CAACG,MAAK,GAAIF,cAAc,CAACJ,IAAI;QACpC;QAEAP,MAAM,CAACM,KAAI,GAAIG,UAAU;MAC3B,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAED,MAAME,MAAK,GAAIA,CAAA,KAAM;MACnBlB,MAAM,CAACmB,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,MAAMC,SAAQ,GAAKC,OAAO,IAAK;MAC7B,MAAMhB,MAAK,GAAIJ,KAAK,CAACqB,KAAK,CAACjB,MAAM;MACjCL,MAAM,CAACmB,IAAI,CAAC,WAAWE,OAAO,WAAWhB,MAAM,EAAE,CAAC;IACpD,CAAC;IAEDX,SAAS,CAAC,MAAM;MACd,MAAMW,MAAK,GAAIJ,KAAK,CAACqB,KAAK,CAACjB,MAAM;MACjC,IAAIA,MAAM,EAAE;QACVD,kBAAkB,CAACC,MAAM,CAAC;MAC5B;IACF,CAAC,CAAC;IAEF,OAAO;MACLH,MAAM;MACNC,YAAY;MACZe,MAAM;MACNE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}