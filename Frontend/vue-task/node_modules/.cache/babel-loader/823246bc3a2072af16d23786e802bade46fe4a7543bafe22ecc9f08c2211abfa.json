{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\nimport { useRouter, useRoute } from \"vue-router\";\nimport axios from \"axios\";\nexport default {\n  name: \"TodosPage\",\n  components: {\n    SidebarComponent\n  },\n  data() {\n    return {\n      todos: [],\n      selectedUser: null\n    };\n  },\n  setup() {\n    const router = useRouter();\n    const route = useRoute();\n    const goBack = () => {\n      router.push(\"/\");\n    };\n    return {\n      goBack,\n      route\n    };\n  },\n  created() {\n    const userId = this.$route.query.userId;\n    if (userId) {\n      axios.get(`https://jsonplaceholder.typicode.com/users/${userId}`).then(response => {\n        this.selectedUser = response.data;\n      }).catch(error => {\n        console.error(\"Error fetching user:\", error);\n      });\n      axios.get(`https://jsonplaceholder.typicode.com/todos?userId=${userId}`).then(response => {\n        this.todos = response.data;\n      }).catch(error => {\n        console.error(\"Error fetching todos:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["SidebarComponent","useRouter","useRoute","axios","name","components","data","todos","selectedUser","setup","router","route","goBack","push","created","userId","$route","query","get","then","response","catch","error","console"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\TodosPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"todos-page\">\r\n    <SidebarComponent :user=\"selectedUser\" />\r\n    <div class=\"geritusu\" @click=\"goBack\">\r\n      <img\r\n        src=\"@/assets/tabler_square-rounded-arrow-left.png\"\r\n        alt=\"Go Home Icon\"\r\n        class=\"geritusu-icon\"\r\n      />\r\n      <span class=\"geritusu-text\">Go Home</span>\r\n    </div>\r\n    <div class=\"todos-container\">\r\n      <ul>\r\n        <li v-for=\"todo in todos\" :key=\"todo.id\" class=\"todo-item\">\r\n          <input type=\"checkbox\" v-model=\"todo.completed\" class=\"checkbox\" />\r\n          <span :class=\"{ completed: todo.completed }\">{{ todo.title }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"TodosPage\",\r\n  components: {\r\n    SidebarComponent,\r\n  },\r\n  data() {\r\n    return {\r\n      todos: [],\r\n      selectedUser: null,\r\n    };\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n\r\n    const goBack = () => {\r\n      router.push(\"/\");\r\n    };\r\n\r\n    return {\r\n      goBack,\r\n      route,\r\n    };\r\n  },\r\n  created() {\r\n    const userId = this.$route.query.userId;\r\n    if (userId) {\r\n      axios\r\n        .get(`https://jsonplaceholder.typicode.com/users/${userId}`)\r\n        .then((response) => {\r\n          this.selectedUser = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user:\", error);\r\n        });\r\n\r\n      axios\r\n        .get(`https://jsonplaceholder.typicode.com/todos?userId=${userId}`)\r\n        .then((response) => {\r\n          this.todos = response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching todos:\", error);\r\n        });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.todos-page {\r\n  display: flex;\r\n}\r\n\r\n.geritusu {\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 10px;\r\n  left: 280px; /* Sidebar genişliği kadar */\r\n  margin-top: 50px;\r\n}\r\n\r\n.geritusu-icon {\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.geritusu-text {\r\n  font-family: \"Poppins\", sans-serif;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  line-height: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.todos-container {\r\n  margin-left: 300px; /* Sidebar genişliği ve biraz boşluk */\r\n  padding: 20px;\r\n}\r\n\r\nul {\r\n  list-style-type: none; /* Başlangıç noktalarını kaldırmak için */\r\n  padding: 0;\r\n}\r\n\r\nli.todo-item {\r\n  text-align: left;\r\n  height: 48px; /* Her bir todo maddesinin yüksekliği */\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: \"Roboto\", sans-serif; /* Yazı tipi Roboto */\r\n  gap: 10px; /* Checkbox ile metin arasındaki boşluk */\r\n  margin-top: 10px;\r\n}\r\n\r\ninput[type=\"checkbox\"] {\r\n  appearance: none;\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 1px solid #4f359b;\r\n  border-radius: 0px;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked {\r\n  background-color: #4f359b;\r\n  border: none;\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked::after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 2px;\r\n  left: 5px;\r\n  width: 3px;\r\n  height: 8px;\r\n  border: solid white;\r\n  border-width: 0 2px 2px 0;\r\n  transform: rotate(45deg);\r\n}\r\n</style>\r\n"],"mappings":";AAuBA,OAAOA,gBAAe,MAAO,gCAAgC;AAC7D,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVL;EACF,CAAC;EACDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIT,SAAS,CAAC,CAAC;IAC1B,MAAMU,KAAI,GAAIT,QAAQ,CAAC,CAAC;IAExB,MAAMU,MAAK,GAAIA,CAAA,KAAM;MACnBF,MAAM,CAACG,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,OAAO;MACLD,MAAM;MACND;IACF,CAAC;EACH,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,MAAM;IACvC,IAAIA,MAAM,EAAE;MACVZ,KAAI,CACDe,GAAG,CAAC,8CAA8CH,MAAM,EAAE,EAC1DI,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACZ,YAAW,GAAIY,QAAQ,CAACd,IAAI;MACnC,CAAC,EACAe,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;MAEJnB,KAAI,CACDe,GAAG,CAAC,qDAAqDH,MAAM,EAAE,EACjEI,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACb,KAAI,GAAIa,QAAQ,CAACd,IAAI;MAC5B,CAAC,EACAe,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}