{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderSlot as _renderSlot, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '@/assets/tabler_square-rounded-x.png';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal-mask\"\n};\nconst _hoisted_2 = {\n  class: \"modal-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"modal-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"Close Icon\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nconst _hoisted_6 = {\n  class: \"modal-header\"\n};\nconst _hoisted_7 = {\n  class: \"modal-body\"\n};\nconst _hoisted_8 = {\n  class: \"post-detail\"\n};\nconst _hoisted_9 = {\n  class: \"comments-section\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Comments:\", -1 /* HOISTED */);\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = {\n  class: \"comment-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    name: \"modal-posts\"\n  }, {\n    default: _withCtx(() => [_ctx.visible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n      class: \"close\",\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.close && _ctx.close(...args))\n    }, [..._hoisted_5]), _createElementVNode(\"div\", _hoisted_6, [_renderSlot(_ctx.$slots, \"header\", {}, () => [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.post.title), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_7, [_renderSlot(_ctx.$slots, \"body\", {}, () => [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.post.body), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comments, comment => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: comment.id,\n        class: \"comment-item\"\n      }, [_createElementVNode(\"img\", {\n        src: _ctx.getGravatarUrl(comment.email),\n        alt: \"User Avatar\",\n        class: \"comment-avatar\"\n      }, null, 8 /* PROPS */, _hoisted_11), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"h4\", null, _toDisplayString(_ctx.getUserName(comment.email)), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(comment.body), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))])])])])])])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 3 /* FORWARDED */\n  });\n}","map":{"version":3,"names":["_imports_0","key","class","_createElementVNode","src","alt","_hoisted_4","_createBlock","_Transition","name","default","_withCtx","_ctx","visible","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","close","_hoisted_5","_hoisted_6","_renderSlot","$slots","_toDisplayString","post","title","_hoisted_7","_hoisted_8","body","_hoisted_9","_hoisted_10","_Fragment","_renderList","$setup","comments","comment","id","getGravatarUrl","email","_hoisted_11","_hoisted_12","getUserName","_createCommentVNode","_"],"sources":["C:\\Users\\Excalibur\\Desktop\\vue-task\\src\\components\\ModalPostsComponent.vue"],"sourcesContent":["<template>\r\n  <transition name=\"modal-posts\">\r\n    <div class=\"modal-mask\" v-if=\"visible\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\">\r\n          <button class=\"close\" @click=\"close\">\r\n            <img src=\"@/assets/tabler_square-rounded-x.png\" alt=\"Close Icon\" />\r\n          </button>\r\n          <div class=\"modal-header\">\r\n            <slot name=\"header\">\r\n              <h1>{{ post.title }}</h1>\r\n            </slot>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <slot name=\"body\">\r\n              <div class=\"post-detail\">\r\n                <p>{{ post.body }}</p>\r\n              </div>\r\n              <div class=\"comments-section\">\r\n                <h3>Comments:</h3>\r\n                <ul>\r\n                  <li\r\n                    v-for=\"comment in comments\"\r\n                    :key=\"comment.id\"\r\n                    class=\"comment-item\"\r\n                  >\r\n                    <img\r\n                      :src=\"getGravatarUrl(comment.email)\"\r\n                      alt=\"User Avatar\"\r\n                      class=\"comment-avatar\"\r\n                    />\r\n                    <div class=\"comment-content\">\r\n                      <h4>{{ getUserName(comment.email) }}</h4>\r\n                      <p>{{ comment.body }}</p>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nimport ModalPostsComponent from \"./ModalPostsComponent.vue\";\r\nimport SidebarComponent from \"./sidebar/SidebarComponent.vue\";\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\n\r\nexport default {\r\n  name: \"PostsPage\",\r\n  components: {\r\n    SidebarComponent,\r\n    ModalPostsComponent,\r\n  },\r\n  setup() {\r\n    const router = useRouter();\r\n    const route = useRoute();\r\n    const posts = ref([]);\r\n    const showModal = ref(false);\r\n    const selectedPost = ref({});\r\n    const comments = ref([]);\r\n    const users = ref([]);\r\n    const selectedUser = ref(null);\r\n\r\n    const fetchPosts = async (userId) => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/posts?userId=${userId}`\r\n        );\r\n        posts.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/users`\r\n        );\r\n        users.value = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchUser = async (userId) => {\r\n      try {\r\n        const userResponse = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/users/${userId}`\r\n        );\r\n        selectedUser.value = userResponse.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching user:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchComments = async (postId) => {\r\n      try {\r\n        const commentsResponse = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\r\n        );\r\n        comments.value = commentsResponse.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching comments:\", error);\r\n      }\r\n    };\r\n\r\n    const openPost = (post) => {\r\n      selectedPost.value = post;\r\n      fetchComments(post.id);\r\n      showModal.value = true;\r\n    };\r\n\r\n    const closeModal = () => {\r\n      showModal.value = false;\r\n      selectedPost.value = null;\r\n      comments.value = [];\r\n    };\r\n\r\n    const goBack = () => {\r\n      router.push(\"/\");\r\n    };\r\n\r\n    onMounted(() => {\r\n      const userId = route.query.userId;\r\n      if (userId) {\r\n        fetchPosts(userId);\r\n        fetchUser(userId);\r\n      }\r\n      fetchUsers();\r\n    });\r\n\r\n    return {\r\n      posts,\r\n      showModal,\r\n      selectedPost,\r\n      comments,\r\n      users,\r\n      selectedUser,\r\n      goBack,\r\n      openPost,\r\n      closeModal,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-container {\r\n  width: 70%;\r\n  max-width: 1000px;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.modal-header,\r\n.modal-footer {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.close {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.modal-body {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.post-detail {\r\n  flex: 2;\r\n  margin-right: 20px;\r\n}\r\n\r\n.comments-section {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n}\r\n\r\n.comment-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.comment-avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n}\r\n\r\n.comment-content {\r\n  flex: 2;\r\n}\r\n\r\n.comment-content h4 {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.comment-content p {\r\n  margin: 5px 0 0;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"],"mappings":";OAMiBA,UAA0C;;EAN3DC,GAAA;EAESC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAiB;gCAExBC,mBAAA,CAAmE;EAA9DC,GAA0C,EAA1CJ,UAA0C;EAACK,GAAG,EAAC;;oBAApDC,UAAmE,C;;EAEhEJ,KAAK,EAAC;AAAc;;EAKpBA,KAAK,EAAC;AAAY;;EAEdA,KAAK,EAAC;AAAa;;EAGnBA,KAAK,EAAC;AAAkB;iCAC3BC,mBAAA,CAAkB,YAAd,WAAS;oBAnB7B;;EA+ByBD,KAAK,EAAC;AAAiB;;uBA9B9CK,YAAA,CA0CaC,WAAA;IA1CDC,IAAI,EAAC;EAAa;IADhCC,OAAA,EAAAC,QAAA,CAEI,MAwCM,CAxCwBC,IAAA,CAAAC,OAAO,I,cAArCC,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCJZ,mBAAA,CAsCM,OAtCNa,UAsCM,GArCJb,mBAAA,CAoCM,OApCNc,UAoCM,GAnCJd,mBAAA,CAES;MAFDD,KAAK,EAAC,OAAO;MAAEgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAER,IAAA,CAAAS,KAAA,IAAAT,IAAA,CAAAS,KAAA,IAAAD,IAAA,CAAK;OAL7C,IAAAE,UAAA,IAQUnB,mBAAA,CAIM,OAJNoB,UAIM,GAHJC,WAAA,CAEOZ,IAAA,CAAAa,MAAA,gBAFP,MAEO,CADLtB,mBAAA,CAAyB,YAAAuB,gBAAA,CAAlBd,IAAA,CAAAe,IAAI,CAACC,KAAK,iB,KAGrBzB,mBAAA,CA0BM,OA1BN0B,UA0BM,GAzBJL,WAAA,CAwBOZ,IAAA,CAAAa,MAAA,cAxBP,MAwBO,CAvBLtB,mBAAA,CAEM,OAFN2B,UAEM,GADJ3B,mBAAA,CAAsB,WAAAuB,gBAAA,CAAhBd,IAAA,CAAAe,IAAI,CAACI,IAAI,iB,GAEjB5B,mBAAA,CAmBM,OAnBN6B,UAmBM,GAlBJC,WAAkB,EAClB9B,mBAAA,CAgBK,c,kBAfHW,mBAAA,CAcKoB,SAAA,QAnCvBC,WAAA,CAsBsCC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;2BADhBxB,mBAAA,CAcK;QAZFb,GAAG,EAAEqC,OAAO,CAACC,EAAE;QAChBrC,KAAK,EAAC;UAENC,mBAAA,CAIE;QAHCC,GAAG,EAAEQ,IAAA,CAAA4B,cAAc,CAACF,OAAO,CAACG,KAAK;QAClCpC,GAAG,EAAC,aAAa;QACjBH,KAAK,EAAC;8BA7B5BwC,WAAA,GA+BoBvC,mBAAA,CAGM,OAHNwC,WAGM,GAFJxC,mBAAA,CAAyC,YAAAuB,gBAAA,CAAlCd,IAAA,CAAAgC,WAAW,CAACN,OAAO,CAACG,KAAK,mBAChCtC,mBAAA,CAAyB,WAAAuB,gBAAA,CAAnBY,OAAO,CAACP,IAAI,iB;oDAjCxCc,mBAAA,e;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}